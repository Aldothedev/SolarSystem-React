{"version":3,"sources":["assets/background-stars.svg","globals/GlobalStyles.js","providers/AppProvider.js","components/header/BurgerMenu.js","components/header/menu/Arrow.js","components/Line.js","components/header/menu/Menu.js","components/header/Header.js","components/mainPanel/featureButtons/SingleButtonContent.js","components/mainPanel/featureButtons/PlanetButtons.js","components/mainPanel/planetDescription/Title.js","components/mainPanel/planetDescription/Description.js","assets/icon-source.svg","components/mainPanel/planetDescription/SourceLink.js","components/mainPanel/planetDescription/PlanetDescription.js","components/mainPanel/planetMathFacts/SingleMathFact.js","components/mainPanel/planetMathFacts/MathFacts.js","assets/planet-mercury.svg","assets/planet-venus.svg","assets/planet-earth.svg","assets/planet-mars.svg","assets/planet-jupiter.svg","assets/planet-saturn.svg","assets/planet-uranus.svg","assets/planet-neptune.svg","assets/planet-mercury-internal.svg","assets/planet-venus-internal.svg","assets/planet-earth-internal.svg","assets/planet-mars-internal.svg","assets/planet-jupiter-internal.svg","assets/planet-saturn-internal.svg","assets/planet-uranus-internal.svg","assets/planet-neptune-internal.svg","assets/geology-mercury.png","assets/geology-venus.png","assets/geology-earth.png","assets/geology-mars.png","assets/geology-jupiter.png","assets/geology-saturn.png","assets/geology-uranus.png","assets/geology-neptune.png","components/mainPanel/planetImage/planetImage.js","components/mainPanel/mainPlanetPanel.js","assets/lastRocket.svg","components/mainPanel/MainPanelStarter.js","components/App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","p","theme","black","backgroundStars","white","AppContext","createContext","darkGrey","lightGrey","mercury","venus","earth","mars","jupiter","saturn","uranus","neptune","useWindowWidth","useState","window","innerWidth","windowWidth","setWindowWidth","useEffect","handleResize","addEventListener","removeEventListener","AppProvider","children","isMenuOpened","setIsMenuOpened","planetsData","currentPlanet","setCurrentPlanet","value","toggleMenuOpen","prevIsMenuOpened","scroll","top","behavior","Provider","GlobalStyles","Burger","styled","div","BurgerIcon","useContext","icon","version","id","xmlns","width","height","viewBox","enableBackground","fill","fillRule","clipRule","d","onClick","Arrow","ArrowIcon","stroke","StyledLine","Line","StyledMenu","menu","isOpened","StyledNavLink","NavLink","color","Circle","PlanetName","span","Menu","pathname","useLocation","to","isActive","includes","StyledHeader","header","StyledTitle","h1","Header","StyledContent","SingleButtonContent","content","longContent","Wrapper","StyledNumber","PlanetDetailsButtons","url","useRouteMatch","getPlanetColor","planetName","slice","h2","Title","StyledParagraph","Description","StyledLinWrapper","StyledLink","a","StyledArrow","img","SourceLink","source","href","target","src","linkIcon","alt","StyledSection","section","PlanetDescription","overview","structure","geology","name","path","StyledSingleFact","StyledFactName","StyledFactValue","SingleFact","factName","MathFactsWrapper","MathFacts","rotation","revolution","radius","temperature","PlanetImageWrapper","StyledPlanetImage","imageWidth","StyledPlanetGeology","handleImgSize","importedPlanets","planet","Mercury","Venus","Earth","Mars","Jupiter","Saturn","Uranus","Neptune","internal","MercuryInternal","VenusInternal","EarthInternal","MarsInternal","JupiterInternal","SaturnInternal","UranusInternal","NeptuneInternal","MercuryGeology","VenusGeology","EarthGeology","MarsGeology","JupiterGeology","SaturnGeology","UranusGeology","NeptuneGeology","PlanetImage","getPlanetImg","replace","charAt","toUpperCase","i","length","undefined","MainPanelWrapper","main","menuOpened","MainPlanetPanel","EntranceComponentWrapper","AppDescription","primary","active","flyAround","keyframes","RocketImage","MainPanelStarter","setActive","entranceMessage","onInit","writer","typeString","callFunction","pauseFor","deleteAll","start","className","rocket","AppWrapper","App","basename","process","exact","component","ReactDOM","render","document","getElementById"],"mappings":"uuUAAe,MAA0B,6CC0D1BA,EAvDKC,YAAH,kgCASO,SAACC,GAAD,OAAOA,EAAEC,MAAMC,QACXC,GAUf,SAACH,GAAD,OAAOA,EAAEC,MAAMG,S,OClBfC,EAAaC,0BAEpBL,EAAQ,CACZG,MAAO,UACPF,MAAO,UACPK,SAAU,UACVC,UAAW,UACXC,QAAS,UACTC,MAAO,UACPC,MAAO,UACPC,KAAM,UACNC,QAAS,UACTC,OAAQ,UACRC,OAAQ,UACRC,QAAS,WAGX,SAASC,IACP,MAAsCC,mBAASC,OAAOC,YAAtD,mBAAOC,EAAP,KAAoBC,EAApB,KAkBA,OAhBAC,qBAAU,WAER,IAAMC,EAAe,WACnBF,EAAeH,OAAOC,aAUxB,OANAI,IAGAL,OAAOM,iBAAiB,SAAUD,GAG3B,kBAAML,OAAOO,oBAAoB,SAAUF,MACjD,IAEIH,EAGT,I,kEA8BeM,EA9BK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,EAAwCV,oBAAS,GAAjD,mBAAOW,EAAP,KAAqBC,EAArB,KACA,EAA0CZ,mBAASa,EAAY,IAA/D,mBAAOC,EAAP,KAAsBC,EAAtB,KAUMC,EAAQ,CACZH,cACAF,eACAM,eAXqB,WACrBL,GAAgB,SAACM,GAAD,OAAuBA,KACvCjB,OAAOkB,OAAO,CACZC,IAAK,EACLC,SAAU,YAQZP,gBACAC,mBACAhB,kBAEF,OACE,cAACZ,EAAWmC,SAAZ,CAAqBN,MAAOA,EAA5B,SACE,eAAC,IAAD,CAAejC,MAAOA,EAAtB,UACE,cAACwC,EAAD,IACCb,QChEHc,EAASC,IAAOC,IAAV,2JAyDGC,GA9CI,WACjB,MAAyCC,qBAAWzC,GAA5CwB,EAAR,EAAQA,aAAcM,EAAtB,EAAsBA,eAEhBY,EAAOlB,EACX,qBACEmB,QAAQ,MACRC,GAAG,UACHC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,qBACRC,iBAAiB,yBAPnB,SASE,4BACE,sBACEC,KAAK,OACLC,SAAS,UACTC,SAAS,UACTC,EAAE,scAKR,qBACEV,QAAQ,MACRC,GAAG,UACHC,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,sBACRC,iBAAiB,0BAPnB,SASE,4BACE,sBACEC,KAAK,OACLC,SAAS,UACTC,SAAS,UACTC,EAAE,6iBAMV,OAAO,eAAChB,EAAD,CAAQiB,QAASxB,EAAjB,cAAmCY,MCvDtCa,GAAQjB,IAAOC,IAAV,0NAwBIiB,GAVG,WAChB,OACE,cAACD,GAAD,UACE,qBAAKV,MAAM,6BAA6BC,MAAM,IAAIC,OAAO,IAAzD,SACE,sBAAMG,KAAK,OAAOO,OAAO,OAAOJ,EAAE,sBClBpCK,GAAapB,IAAOC,IAAV,2JAGA,SAAC5C,GAAD,OAAOA,EAAEC,MAAMG,SAUhB4D,GAFF,kBAAM,cAACD,GAAD,KCPbE,GAAatB,IAAOuB,KAAV,mlBAWD,SAAClE,GAAD,OAAQA,EAAEmE,SAAW,WAAa,cAqB3CC,GAAgBzB,YAAO0B,IAAP1B,CAAH,+gBAuBO,SAAC3C,GAAD,OAAOA,EAAEsE,SAK7BC,GAAS5B,IAAOC,IAAV,4OAOU,SAAC5C,GAAD,OAAOA,EAAEsE,SAOzBE,GAAa7B,IAAO8B,KAAV,8kBAUL,SAACzE,GAAD,OAAOA,EAAEC,MAAMG,SAmKXsE,GA9IF,WACX,MAAyC5B,qBAAWzC,GAA5CwB,EAAR,EAAQA,aAAcM,EAAtB,EAAsBA,eACdwC,EAAaC,cAAbD,SAER,OACE,eAACV,GAAD,CAAYE,SAAUtC,EAAtB,UACE,eAACuC,GAAD,CACEE,MAAM,UACNO,GAAG,oBACHlB,QAASxB,EACT2C,SAAU,iBACR,CACE,oBACA,qBACA,oBACAC,SAASJ,IATf,UAYE,cAACJ,GAAD,CAAQD,MAAM,YACd,cAACE,GAAD,sBACA,cAAC,GAAD,OAEF,cAAC,GAAD,IAEA,eAACJ,GAAD,CACEE,MAAM,UACNO,GAAG,kBACHlB,QAASxB,EACT2C,SAAU,iBACR,CAAC,kBAAmB,mBAAoB,kBAAkBC,SACxDJ,IANN,UAUE,cAACJ,GAAD,CAAQD,MAAM,YACd,cAACE,GAAD,oBACA,cAAC,GAAD,OAEF,cAAC,GAAD,IAEA,eAACJ,GAAD,CACEE,MAAM,UACNO,GAAG,kBACHlB,QAASxB,EACT2C,SAAU,iBACR,CAAC,kBAAmB,mBAAoB,kBAAkBC,SACxDJ,IANN,UAUE,cAACJ,GAAD,CAAQD,MAAM,YACd,cAACE,GAAD,oBACA,cAAC,GAAD,OAEF,cAAC,GAAD,IAEA,eAACJ,GAAD,CACEE,MAAM,UACNO,GAAG,iBACHlB,QAASxB,EACT2C,SAAU,iBACR,CAAC,iBAAkB,kBAAmB,iBAAiBC,SACrDJ,IANN,UAUE,cAACJ,GAAD,CAAQD,MAAM,YACd,cAACE,GAAD,mBACA,cAAC,GAAD,OAEF,cAAC,GAAD,IAEA,eAACJ,GAAD,CACEE,MAAM,UACNO,GAAG,oBACHlB,QAASxB,EACT2C,SAAU,iBACR,CACE,oBACA,qBACA,oBACAC,SAASJ,IATf,UAYE,cAACJ,GAAD,CAAQD,MAAM,YACd,cAACE,GAAD,sBACA,cAAC,GAAD,OAEF,cAAC,GAAD,IAEA,eAACJ,GAAD,CACEE,MAAM,UACNO,GAAG,mBACHlB,QAASxB,EACT2C,SAAU,iBACR,CAAC,mBAAoB,oBAAqB,mBAAmBC,SAC3DJ,IANN,UAUE,cAACJ,GAAD,CAAQD,MAAM,YACd,cAACE,GAAD,qBACA,cAAC,GAAD,OAEF,cAAC,GAAD,IAEA,eAACJ,GAAD,CACEE,MAAM,UACNO,GAAG,mBACHlB,QAASxB,EACT2C,SAAU,iBACR,CAAC,mBAAoB,oBAAqB,mBAAmBC,SAC3DJ,IANN,UAUE,cAACJ,GAAD,CAAQD,MAAM,YACd,cAACE,GAAD,qBACA,cAAC,GAAD,OAEF,cAAC,GAAD,IAEA,eAACJ,GAAD,CACEE,MAAM,UACNO,GAAG,oBACHlB,QAASxB,EACT2C,SAAU,iBACR,CACE,oBACA,qBACA,oBACAC,SAASJ,IATf,UAYE,cAACJ,GAAD,CAAQD,MAAM,YACd,cAACE,GAAD,sBACA,cAAC,GAAD,WCnPFQ,GAAerC,IAAOsC,OAAV,0hBASI,SAACjF,GAAD,OAAOA,EAAEC,MAAMC,SAiB/BgF,GAAcvC,IAAOwC,GAAV,sIAmBFC,GAZA,WACb,OACE,mCACE,eAACJ,GAAD,WACE,cAACE,GAAD,0BACA,cAAC,GAAD,IACA,cAAC,GAAD,UCxCFG,GAAgB1C,IAAO8B,KAAV,+CAaJa,GATa,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YAEhCnE,GAAcJ,EADO6B,qBAAWzC,GAA9BY,kBAGR,OACE,cAACoE,GAAD,UAAgBhE,EAAc,IAAMkE,EAAUC,KCR5CC,GAAU9C,IAAOuB,KAAV,giBA2BPE,GAAgBzB,YAAO0B,IAAP1B,CAAH,q0BASR,SAAC3C,GAAD,OAAOA,EAAEC,MAAMG,SAIK,SAACJ,GAAD,OAAOA,EAAEC,MAAMD,EAAEsE,UAYtB,SAACtE,GAAD,OAAOA,EAAEC,MAAMD,EAAEsE,UAkBrCoB,GAAe/C,IAAO8B,KAAV,gMAqCHkB,GAzBc,WAC3B,IAAMC,EAAQC,cAARD,IACAE,EAAiB,SAACC,GAAD,OAAgBA,EAAWC,MAAM,IAExD,OACE,eAACP,GAAD,WACE,eAAC,GAAD,CAAenB,MAAOwB,EAAeF,GAAMf,GAAE,UAAKe,EAAL,aAA7C,UACE,cAACF,GAAD,iBACA,cAAC,GAAD,CAAqBH,QAAQ,WAAWC,YAAY,gBAEtD,eAAC,GAAD,CAAelB,MAAOwB,EAAeF,GAAMf,GAAE,UAAKe,EAAL,cAA7C,UACE,cAACF,GAAD,iBACA,cAAC,GAAD,CACEH,QAAQ,YACRC,YAAY,0BAGhB,eAAC,GAAD,CAAelB,MAAOwB,EAAeF,GAAMf,GAAE,UAAKe,EAAL,YAA7C,UACE,cAACF,GAAD,iBACA,cAAC,GAAD,CAAqBH,QAAQ,UAAUC,YAAY,2BCvGrDN,GAAcvC,IAAOsD,GAAV,wOAeFC,GAFD,SAAC,GAAD,IAAGH,EAAH,EAAGA,WAAH,OAAoB,cAAC,GAAD,UAAcA,KCb1CI,GAAkBxD,IAAO3C,EAAV,yVAwBNoG,GAJK,SAAC,GAAD,IAAGb,EAAH,EAAGA,QAAH,OAClB,cAACY,GAAD,UAAkBZ,KCxBL,OAA0B,wCCInCc,GAAmB1D,IAAOC,IAAV,0YAqBhB0D,GAAa3D,IAAO4D,EAAV,mHAOVC,GAAc7D,IAAO8D,IAAV,kFAgBFC,GAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACjB,eAACN,GAAD,WACE,wCACA,cAACC,GAAD,CAAYM,KAAMD,EAAQE,OAAO,SAAjC,uBAGA,cAACL,GAAD,CAAaM,IAAKC,GAAUC,IAAI,SCrC9BC,GAAgBtE,IAAOuE,QAAV,4eAoDJC,GAzBW,SAAC,GAAuB,IAArBnF,EAAoB,EAApBA,cACnB4D,EAAQC,cAARD,IACAwB,EAAuCpF,EAAvCoF,SAAUC,EAA6BrF,EAA7BqF,UAAWC,EAAkBtF,EAAlBsF,QAASC,EAASvF,EAATuF,KAEtC,OACE,eAACN,GAAD,WACE,cAAC,GAAD,CAAOlB,WAAYwB,IACnB,eAAC,IAAD,WACE,eAAC,IAAD,CAAOC,KAAI,UAAK5B,EAAL,aAAX,UACE,cAAC,GAAD,CAAaL,QAAS6B,EAAS7B,UAC/B,cAAC,GAAD,CAAYoB,OAAQS,EAAST,YAE/B,eAAC,IAAD,CAAOa,KAAI,UAAK5B,EAAL,cAAX,UACE,cAAC,GAAD,CAAaL,QAAS8B,EAAU9B,UAChC,cAAC,GAAD,CAAYoB,OAAQU,EAAUV,YAEhC,eAAC,IAAD,CAAOa,KAAI,UAAK5B,EAAL,YAAX,UACE,cAAC,GAAD,CAAaL,QAAS+B,EAAQ/B,UAC9B,cAAC,GAAD,CAAYoB,OAAQW,EAAQX,mBCjDhCc,GAAmB9E,IAAOC,IAAV,6eAwBhB8E,GAAiB/E,IAAO3C,EAAV,sOAad2H,GAAkBhF,IAAO3C,EAAV,+SA0BN4H,GATI,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAU3F,EAAY,EAAZA,MAC9B,OACE,eAACuF,GAAD,WACE,cAACC,GAAD,UAAiBG,IACjB,cAACF,GAAD,UAAkBzF,QCzDlB4F,GAAmBnF,IAAOuE,QAAV,wdAwCPa,GAbG,SAAC,GAAuB,IAArB/F,EAAoB,EAApBA,cACXgG,EAA8ChG,EAA9CgG,SAAUC,EAAoCjG,EAApCiG,WAAYC,EAAwBlG,EAAxBkG,OAAQC,EAAgBnG,EAAhBmG,YAEtC,OACE,eAACL,GAAD,WACE,cAAC,GAAD,CAAYD,SAAU,gBAAiB3F,MAAO8F,IAC9C,cAAC,GAAD,CAAYH,SAAU,kBAAmB3F,MAAO+F,IAChD,cAAC,GAAD,CAAYJ,SAAU,SAAU3F,MAAOgG,IACvC,cAAC,GAAD,CAAYL,SAAU,gBAAiB3F,MAAOiG,QCvCrC,OAA0B,2CCA1B,OAA0B,yCCA1B,OAA0B,yCCA1B,OAA0B,wCCA1B,OAA0B,2CCA1B,OAA0B,0CCA1B,OAA0B,0CCA1B,OAA0B,2CCA1B,OAA0B,oDCA1B,OAA0B,kDCA1B,OAA0B,kDCA1B,OAA0B,iDCA1B,OAA0B,oDCA1B,OAA0B,mDCA1B,OAA0B,mDCA1B,OAA0B,oDCA1B,OAA0B,4CCA1B,OAA0B,0CCA1B,OAA0B,0CCA1B,OAA0B,yCCA1B,OAA0B,4CCA1B,OAA0B,2CCA1B,OAA0B,2CCA1B,OAA0B,4CCkCnCC,GAAqBzF,IAAOuE,QAAV,+ZAwBlBmB,GAAoB1F,IAAO8D,IAAV,qFACZ,SAACzG,GAAD,gBAAUA,EAAEsI,WAAZ,SAKLC,GAAsB5F,IAAO8D,IAAV,gJAEd,SAACzG,GAAD,gBAAUA,EAAEsI,WAAZ,SAQLE,GAAgB,SAAC5C,EAAKvE,GA2D1B,MAzDY,aAARuE,EACEvE,EAAc,IACP,IACAA,EAAc,KACd,IACK,IACC,WAARuE,EACLvE,EAAc,IACP,IACAA,EAAc,KACd,IACK,IACC,WAARuE,EACLvE,EAAc,IACP,IACAA,EAAc,KACd,IACK,IACC,UAARuE,EACLvE,EAAc,IACP,IACAA,EAAc,KACd,IACK,IACC,aAARuE,EACLvE,EAAc,IACP,IACAA,EAAc,KACd,IACK,IACC,YAARuE,EACLvE,EAAc,IACP,IACAA,EAAc,KACd,IACK,IACC,YAARuE,EACLvE,EAAc,IACP,IACAA,EAAc,KACd,IACK,IACC,aAARuE,EACLvE,EAAc,IACP,IACAA,EAAc,KACd,IACK,IAGZA,EAAc,IACP,GACAA,EAAc,KACd,IACK,KAOdoH,GAAkB,CACtBC,OAAQ,CAACC,GAASC,GAAOC,GAAOC,GAAMC,GAASC,GAAQC,GAAQC,IAC/DC,SAAU,CACRC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,IAEFrC,QAAS,CACPsC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,KAmEWC,GA/DK,WAClB,MAAwCtH,qBAAWzC,GAA3CY,EAAR,EAAQA,eAAgBc,EAAxB,EAAwBA,YAClBV,EAAcJ,IACZ2E,EAAQC,cAARD,IAGFyE,EAAe,SAACzE,EAAK4B,GACzB,IAAIzB,EAAaH,EAAI0E,QAAQ,IAAK,IAClCvE,EAAaA,EAAWwE,OAAO,GAAGC,cAAgBzE,EAAWC,MAAM,GAEnE,IAAK,IAAIyE,EAAI,EAAGA,EAAI1I,EAAY2I,OAAQD,IACtC,GAAIjD,IAAI,UAAQ5B,EAAR,cACN,GAAIG,IAAehE,EAAY0I,GAAGlD,KAChC,OAAOkB,GAAgBC,OAAO+B,QAC3B,GAAIjD,IAAI,UAAQ5B,EAAR,eACb,GAAIG,IAAehE,EAAY0I,GAAGlD,KAChC,OAAOkB,GAAgBU,SAASsB,QAC7B,GAAIjD,IAAI,UAAQ5B,EAAR,aACb,GAAIG,IAAehE,EAAY0I,GAAGlD,KAChC,OAAOkB,GAAgBC,OAAO+B,QAEhC,GAAI1E,IAAehE,EAAY0I,GAAGlD,KAChC,OAAOkB,GAAgBnB,QAAQmD,IAKvC,OACE,cAACrC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOZ,KAAI,UAAK5B,EAAL,aAAX,SACE,cAACyC,GAAD,CACEvB,IAAKuD,EAAazE,EAAD,UAASA,EAAT,cACjB0C,WAAYE,GAAc5C,EAAKvE,GAC/B2F,IAAI,yBAIR,cAAC,IAAD,CAAOQ,KAAI,UAAK5B,EAAL,cAAX,SACE,cAACyC,GAAD,CACEvB,IAAKuD,EAAazE,EAAD,UAASA,EAAT,eACjB0C,WAAYE,GAAc5C,EAAKvE,GAC/B2F,IAAI,sCAIR,eAAC,IAAD,CAAOQ,KAAI,UAAK5B,EAAL,YAAX,UACE,cAACyC,GAAD,CACEvB,IAAKuD,EAAazE,EAAD,UAASA,EAAT,aACjB0C,WAAYE,GAAc5C,EAAKvE,GAC/B2F,IAAI,oCAEN,cAACuB,GAAD,CACEzB,IAAKuD,EAAazE,EAAK,WACvBoB,IAAI,sBACJsB,WAAYE,QAAcmC,EAAWtJ,cC/M3CuJ,GAAmBjI,IAAOkI,KAAV,8cAKP,SAAC7K,GAAD,OAAQA,EAAE8K,WAAF,WAA4B,cA6CpCC,GA1BS,WACtB,MACEjI,qBAAWzC,GADL0B,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,cAAeC,EAApC,EAAoCA,iBAAkBJ,EAAtD,EAAsDA,aAIlDkE,EADYF,cAARD,IACa0E,QAAQ,IAAK,IAWlC,OAVAvE,EAAaA,EAAWwE,OAAO,GAAGC,cAAgBzE,EAAWC,MAAM,GAEnEzE,qBAAU,WACR,IAAK,IAAIkJ,EAAI,EAAGA,EAAI1I,EAAY2I,OAAQD,IAClC1I,EAAY0I,GAAGlD,OAASxB,GAC1B9D,EAAiBF,EAAY0I,MAGhC,CAAC1E,IAGF,eAAC6E,GAAD,CAAkBE,WAAYjJ,EAA9B,UACE,cAAC,GAAD,IACA,cAAC,GAAD,CAAaG,cAAeA,IAC5B,cAAC,GAAD,CAAmBA,cAAeA,IAClC,cAAC,GAAD,CAAWA,cAAeA,Q,oBCtDjB,OAA0B,uCCMnCgJ,GAA2BrI,IAAOkI,KAAV,uVAQf,SAAC7K,GAAD,OAAQA,EAAEmE,SAAW,WAAa,MAS3Ce,GAAcvC,IAAOsD,GAAV,2hBAKJ,qBAAGhG,MAAkBG,SAyB5B6K,GAAiBtI,IAAO3C,EAAV,koBAEL,qBAAGkL,QAAyB,SAAW,YACnC,qBAAGA,QAAyB,OAAS,MAGzC,qBAAGC,OAAuB,WAAa,cAerC,qBAAGD,QAAyB,SAAW,YACnC,qBAAGA,QAAyB,OAAS,MAepDE,GAAYC,YAAH,2IASTC,GAAc3I,IAAO8D,IAAV,oQAGF2E,IA2DAG,GA9CU,WACvB,MAA4BrK,oBAAS,GAArC,mBAAOiK,EAAP,KAAeK,EAAf,KACA,EACE1I,qBAAWzC,GADLwB,EAAR,EAAQA,aAAcM,EAAtB,EAAsBA,eAAgBlB,EAAtC,EAAsCA,eAGhCwK,EACJxK,KAAoB,IAChB,uCACA,yBAEN,OACE,eAAC+J,GAAD,CAA0B7G,SAAUtC,EAApC,UACE,cAAC,GAAD,UACE,cAAC,KAAD,CACE6J,OAAQ,SAACC,GACPA,EACGC,WAAW,yBACXC,cAAa,kBAAML,GAAU,MAC7BM,SAAS,MACTC,YACAH,WAAWH,GACXO,aAKT,eAACf,GAAD,CAAgBC,SAAO,EAACC,OAAQA,EAAhC,kBACO,uBADP,sBAEE,sBAAMc,UAAU,aAAhB,wBAGF,eAAChB,GAAD,CAAgBE,OAAQA,EAAxB,8BACmB,sBAAMc,UAAU,UAAhB,qBADnB,+GAMA,cAACX,GAAD,CACE3H,QAAS1C,KAAoB,IAAM,KAAOkB,EAC1C2E,IAAKoF,GACLlF,IAAI,uCCpJNmF,GAAaxJ,IAAOC,IAAV,kDAyBDwJ,GArBH,WACV,OACE,cAACD,GAAD,UACE,eAAC,IAAD,CAAQE,SAAUC,qBAAlB,UACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO9E,KAAK,IAAI+E,OAAK,EAACC,UAAWjB,KACjC,cAAC,IAAD,CAAO/D,KAAK,SAASgF,UAAWzB,KAChC,cAAC,IAAD,CAAOvD,KAAK,WAAWgF,UAAWzB,KAClC,cAAC,IAAD,CAAOvD,KAAK,SAASgF,UAAWzB,KAChC,cAAC,IAAD,CAAOvD,KAAK,QAAQgF,UAAWzB,KAC/B,cAAC,IAAD,CAAOvD,KAAK,WAAWgF,UAAWzB,KAClC,cAAC,IAAD,CAAOvD,KAAK,UAAUgF,UAAWzB,KACjC,cAAC,IAAD,CAAOvD,KAAK,UAAUgF,UAAWzB,KACjC,cAAC,IAAD,CAAOvD,KAAK,WAAWgF,UAAWzB,cCpB5C0B,IAASC,OACP,cAAC,EAAD,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7239110a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background-stars.f6233a6a.svg\";","import { createGlobalStyle } from 'styled-components';\r\nimport backgroundStars from '../assets/background-stars.svg';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  *, *::after,*::before{\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n    font-size: 10px;\r\n  } \r\n\r\n  html{\r\n    background-color: ${(p) => p.theme.black};\r\n    background-image: url(${backgroundStars});\r\n    background-position: center;\r\n    background-size: cover;\r\n    width: 100%;\r\n  }\r\n\r\n  body{\r\n    font-family: 'Spartan', sans-serif; \r\n    font-size: 1.4rem;\r\n    line-height: 2.5rem;\r\n    color: ${(p) => p.theme.white};\r\n  }\r\n\r\n  h1{\r\n    font-family: 'Antonio', sans-serif;\r\n    font-size: 8rem;\r\n    line-height: 10.4rem;\r\n    font-weight: 500;\r\n  }\r\n\r\n  h2{\r\n    font-family: 'Antonio', sans-serif;\r\n    font-size: 4rem;\r\n    line-height: 5.2rem;\r\n    font-weight: 500;\r\n    letter-spacing: -0.15rem;\r\n  }\r\n\r\n  h3{\r\n    font-family: 'Spartan', sans-serif;\r\n    font-size: 1.2rem;\r\n    line-height: 2.5rem;\r\n    font-weight: 700;\r\n    letter-spacing: 0.26rem;\r\n\r\n  }\r\n  h4{\r\n    font-family: 'Spartan', sans-serif;\r\n    font-size: 1.1rem;\r\n    line-height: 2.5rem;\r\n    font-weight: 700;\r\n    letter-spacing: 0.1rem;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import React, { createContext, useState, useEffect } from 'react';\r\nimport { ThemeProvider } from 'styled-components';\r\nimport planetsData from '../assets/data.json';\r\nimport GlobalStyles from '../globals/GlobalStyles';\r\n\r\nexport const AppContext = createContext();\r\n\r\nconst theme = {\r\n  white: '#FFFFFF',\r\n  black: '#070724',\r\n  darkGrey: '#38384F',\r\n  lightGrey: '#838391',\r\n  mercury: '#419EBB',\r\n  venus: '#EDA249',\r\n  earth: '#6D2ED5',\r\n  mars: '#D14C32',\r\n  jupiter: '#D83A34',\r\n  saturn: '#CD5120',\r\n  uranus: '#1EC1A2',\r\n  neptune: '#2D68F0',\r\n};\r\n\r\nfunction useWindowWidth() {\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n  useEffect(() => {\r\n    // handler to set window width value:\r\n    const handleResize = () => {\r\n      setWindowWidth(window.innerWidth);\r\n    };\r\n\r\n    // Initial function call, so state gets updated with initial window size\r\n    handleResize();\r\n\r\n    // event listener on window:\r\n    window.addEventListener('resize', handleResize);\r\n\r\n    // Clean up the listener:\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowWidth;\r\n}\r\n\r\nconst AppProvider = ({ children }) => {\r\n  const [isMenuOpened, setIsMenuOpened] = useState(false);\r\n  const [currentPlanet, setCurrentPlanet] = useState(planetsData[0]);\r\n\r\n  const toggleMenuOpen = () => {\r\n    setIsMenuOpened((prevIsMenuOpened) => !prevIsMenuOpened);\r\n    window.scroll({\r\n      top: 0,\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  const value = {\r\n    planetsData,\r\n    isMenuOpened,\r\n    toggleMenuOpen,\r\n    currentPlanet,\r\n    setCurrentPlanet,\r\n    useWindowWidth,\r\n  };\r\n  return (\r\n    <AppContext.Provider value={value}>\r\n      <ThemeProvider theme={theme}>\r\n        <GlobalStyles />\r\n        {children}\r\n      </ThemeProvider>\r\n    </AppContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AppProvider;\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { AppContext } from '../../providers/AppProvider';\r\n\r\nconst Burger = styled.div`\r\n  width: 24px;\r\n  height: 17px;\r\n  right: 24px;\r\n  cursor: pointer;\r\n\r\n  @media (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst BurgerIcon = () => {\r\n  const { isMenuOpened, toggleMenuOpen } = useContext(AppContext);\r\n\r\n  const icon = isMenuOpened ? (\r\n    <svg\r\n      version=\"1.1\"\r\n      id=\"Layer_1\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"26\"\r\n      height=\"19\"\r\n      viewBox=\"0 0 121.31 122.876\"\r\n      enableBackground=\"new 0 0 121.31 122.876\"\r\n    >\r\n      <g>\r\n        <path\r\n          fill=\"#FFF\"\r\n          fillRule=\"evenodd\"\r\n          clipRule=\"evenodd\"\r\n          d=\"M90.914,5.296c6.927-7.034,18.188-7.065,25.154-0.068 c6.961,6.995,6.991,18.369,0.068,25.397L85.743,61.452l30.425,30.855c6.866,6.978,6.773,18.28-0.208,25.247 c-6.983,6.964-18.21,6.946-25.074-0.031L60.669,86.881L30.395,117.58c-6.927,7.034-18.188,7.065-25.154,0.068 c-6.961-6.995-6.992-18.369-0.068-25.397l30.393-30.827L5.142,30.568c-6.867-6.978-6.773-18.28,0.208-25.247 c6.983-6.963,18.21-6.946,25.074,0.031l30.217,30.643L90.914,5.296L90.914,5.296z\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  ) : (\r\n    <svg\r\n      version=\"1.1\"\r\n      id=\"Layer_1\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"26\"\r\n      height=\"19\"\r\n      viewBox=\"0 0 122.879 103.609\"\r\n      enableBackground=\"new 0 0 122.879 103.609\"\r\n    >\r\n      <g>\r\n        <path\r\n          fill=\"#FFF\"\r\n          fillRule=\"evenodd\"\r\n          clipRule=\"evenodd\"\r\n          d=\"M10.368,0h102.144c5.703,0,10.367,4.665,10.367,10.367v0 c0,5.702-4.664,10.368-10.367,10.368H10.368C4.666,20.735,0,16.07,0,10.368v0C0,4.665,4.666,0,10.368,0L10.368,0z M10.368,82.875 h102.144c5.703,0,10.367,4.665,10.367,10.367l0,0c0,5.702-4.664,10.367-10.367,10.367H10.368C4.666,103.609,0,98.944,0,93.242l0,0 C0,87.54,4.666,82.875,10.368,82.875L10.368,82.875z M10.368,41.438h102.144c5.703,0,10.367,4.665,10.367,10.367l0,0 c0,5.702-4.664,10.368-10.367,10.368H10.368C4.666,62.173,0,57.507,0,51.805l0,0C0,46.103,4.666,41.438,10.368,41.438 L10.368,41.438z\"\r\n        />\r\n      </g>\r\n    </svg>\r\n  );\r\n\r\n  return <Burger onClick={toggleMenuOpen}> {icon}</Burger>;\r\n};\r\n\r\nexport default BurgerIcon;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Arrow = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  right: 8px;\r\n  transform: translateY(-130%);\r\n  width: 6px;\r\n  height: 8px;\r\n  opacity: 0.8;\r\n\r\n  @media (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst ArrowIcon = () => {\r\n  return (\r\n    <Arrow>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"6\" height=\"8\">\r\n        <path fill=\"none\" stroke=\"#FFF\" d=\"M1 0l4 4-4 4\" />\r\n      </svg>\r\n    </Arrow>\r\n  );\r\n};\r\n\r\nexport default ArrowIcon;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLine = styled.div`\r\n  width: 100%;\r\n  height: 1px;\r\n  background: ${(p) => p.theme.white};\r\n  opacity: 0.2;\r\n\r\n  @media (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst Line = () => <StyledLine></StyledLine>;\r\n\r\nexport default Line;\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport ArrowIcon from './Arrow';\r\nimport Line from '../../Line';\r\nimport { AppContext } from '../../../providers/AppProvider';\r\n\r\nconst StyledMenu = styled.menu`\r\n  width: 100%;\r\n  height: calc(100% - 69px);\r\n  position: fixed;\r\n  top: 69px;\r\n  left: 0;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  padding: 32px 24px;\r\n  transition: 0.4s;\r\n  transform: ${(p) => (p.isOpened ? 'scale(1)' : 'scale(0)')};\r\n\r\n  @media (min-width: 768px) {\r\n    width: 100%;\r\n    height: 25px;\r\n    position: unset;\r\n    display: flex;\r\n    flex-direction: row;\r\n    padding: 0;\r\n    transform: scale(1);\r\n    transition: unset;\r\n  }\r\n\r\n  @media (min-width: 1440px) {\r\n    height: 100%;\r\n    width: 50%;\r\n    max-width: 50%;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\n  height: 40px;\r\n  position: relative;\r\n  display: block;\r\n  list-style: none;\r\n  text-decoration: none;\r\n\r\n  @media (min-width: 768px) {\r\n    position: unset;\r\n    height: unset;\r\n  }\r\n\r\n  @media (min-width: 1440px) {\r\n    height: 100%;\r\n    width: 67px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border-top: 4px solid transparent;\r\n    border-bottom: 4px solid transparent;\r\n    transition: 0.3s;\r\n\r\n    &.active {\r\n      border-top-color: ${(p) => p.color};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Circle = styled.div`\r\n  width: 20px;\r\n  height: 20px;\r\n  position: absolute;\r\n  top: 50%;\r\n  border-radius: 50%;\r\n  transform: translateY(-50%);\r\n  background-color: ${(p) => p.color};\r\n\r\n  @media (min-width: 768px) {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nconst PlanetName = styled.span`\r\n  display: block;\r\n  position: absolute;\r\n  left: 45px;\r\n  top: 50%;\r\n  font-family: 'Spartan';\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  line-height: 2.5rem;\r\n  text-transform: uppercase;\r\n  color: ${(p) => p.theme.white};\r\n  letter-spacing: 0.13rem;\r\n  transform: translateY(-45%);\r\n\r\n  @media (min-width: 768px) {\r\n    position: unset;\r\n    top: unset;\r\n    left: unset;\r\n    opacity: 0.75;\r\n    font-size: 1.1rem;\r\n    letter-spacing: 0.1rem;\r\n    transform: unset;\r\n    transition: 0.3s;\r\n  }\r\n  @media (min-width: 1440px) {\r\n    &:hover {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Menu = () => {\r\n  const { isMenuOpened, toggleMenuOpen } = useContext(AppContext);\r\n  const { pathname } = useLocation();\r\n\r\n  return (\r\n    <StyledMenu isOpened={isMenuOpened}>\r\n      <StyledNavLink\r\n        color=\"#DEF4FC\"\r\n        to=\"/mercury/overview\"\r\n        onClick={toggleMenuOpen}\r\n        isActive={() =>\r\n          [\r\n            '/mercury/overview',\r\n            '/mercury/structure',\r\n            '/mercury/surface',\r\n          ].includes(pathname)\r\n        }\r\n      >\r\n        <Circle color=\"#DEF4FC\" />\r\n        <PlanetName>mercury</PlanetName>\r\n        <ArrowIcon />\r\n      </StyledNavLink>\r\n      <Line />\r\n\r\n      <StyledNavLink\r\n        color=\"#F7CC7F\"\r\n        to=\"/venus/overview\"\r\n        onClick={toggleMenuOpen}\r\n        isActive={() =>\r\n          ['/venus/overview', '/venus/structure', '/venus/surface'].includes(\r\n            pathname\r\n          )\r\n        }\r\n      >\r\n        <Circle color=\"#F7CC7F\" />\r\n        <PlanetName>venus</PlanetName>\r\n        <ArrowIcon />\r\n      </StyledNavLink>\r\n      <Line />\r\n\r\n      <StyledNavLink\r\n        color=\"#545BFE\"\r\n        to=\"/earth/overview\"\r\n        onClick={toggleMenuOpen}\r\n        isActive={() =>\r\n          ['/earth/overview', '/earth/structure', '/earth/surface'].includes(\r\n            pathname\r\n          )\r\n        }\r\n      >\r\n        <Circle color=\"#545BFE\" />\r\n        <PlanetName>earth</PlanetName>\r\n        <ArrowIcon />\r\n      </StyledNavLink>\r\n      <Line />\r\n\r\n      <StyledNavLink\r\n        color=\"#FF6A45\"\r\n        to=\"/mars/overview\"\r\n        onClick={toggleMenuOpen}\r\n        isActive={() =>\r\n          ['/mars/overview', '/mars/structure', '/mars/surface'].includes(\r\n            pathname\r\n          )\r\n        }\r\n      >\r\n        <Circle color=\"#FF6A45\" />\r\n        <PlanetName>mars</PlanetName>\r\n        <ArrowIcon />\r\n      </StyledNavLink>\r\n      <Line />\r\n\r\n      <StyledNavLink\r\n        color=\"#ECAD7A\"\r\n        to=\"/jupiter/overview\"\r\n        onClick={toggleMenuOpen}\r\n        isActive={() =>\r\n          [\r\n            '/jupiter/overview',\r\n            '/jupiter/structure',\r\n            '/jupiter/surface',\r\n          ].includes(pathname)\r\n        }\r\n      >\r\n        <Circle color=\"#ECAD7A\" />\r\n        <PlanetName>jupiter</PlanetName>\r\n        <ArrowIcon />\r\n      </StyledNavLink>\r\n      <Line />\r\n\r\n      <StyledNavLink\r\n        color=\"#FCCB6B\"\r\n        to=\"/saturn/overview\"\r\n        onClick={toggleMenuOpen}\r\n        isActive={() =>\r\n          ['/saturn/overview', '/saturn/structure', '/saturn/surface'].includes(\r\n            pathname\r\n          )\r\n        }\r\n      >\r\n        <Circle color=\"#FCCB6B\" />\r\n        <PlanetName>saturn</PlanetName>\r\n        <ArrowIcon />\r\n      </StyledNavLink>\r\n      <Line />\r\n\r\n      <StyledNavLink\r\n        color=\"#65F0D5\"\r\n        to=\"/uranus/overview\"\r\n        onClick={toggleMenuOpen}\r\n        isActive={() =>\r\n          ['/uranus/overview', '/uranus/structure', '/uranus/surface'].includes(\r\n            pathname\r\n          )\r\n        }\r\n      >\r\n        <Circle color=\"#65F0D5\" />\r\n        <PlanetName>uranus</PlanetName>\r\n        <ArrowIcon />\r\n      </StyledNavLink>\r\n      <Line />\r\n\r\n      <StyledNavLink\r\n        color=\"#497EFA\"\r\n        to=\"/neptune/overview\"\r\n        onClick={toggleMenuOpen}\r\n        isActive={() =>\r\n          [\r\n            '/neptune/overview',\r\n            '/neptune/structure',\r\n            '/neptune/surface',\r\n          ].includes(pathname)\r\n        }\r\n      >\r\n        <Circle color=\"#497EFA\" />\r\n        <PlanetName>neptune</PlanetName>\r\n        <ArrowIcon />\r\n      </StyledNavLink>\r\n    </StyledMenu>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport BurgerIcon from './BurgerMenu';\r\nimport Menu from './menu/Menu';\r\n\r\nconst StyledHeader = styled.header`\r\n  width: 100%;\r\n  position: sticky;\r\n  top: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 16px 24px;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n  background-color: ${(p) => p.theme.black};\r\n  z-index: 999;\r\n\r\n  @media (min-width: 768px) {\r\n    height: 158px;\r\n    padding: 32px 51.5px 27px 51.5px;\r\n    flex-direction: column;\r\n  }\r\n\r\n  @media (min-width: 1440px) {\r\n    height: 85px;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    padding: 0 40px 0 32px;\r\n  }\r\n`;\r\n\r\nconst StyledTitle = styled.h1`\r\n  font-size: 2.8rem;\r\n  line-height: 3.6rem;\r\n  text-transform: uppercase;\r\n  letter-spacing: -0.105rem;\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <StyledHeader>\r\n        <StyledTitle>The planets</StyledTitle>\r\n        <BurgerIcon />\r\n        <Menu />\r\n      </StyledHeader>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { AppContext } from '../../../providers/AppProvider';\r\n\r\nconst StyledContent = styled.span`\r\n  display: block;\r\n`;\r\n\r\nconst SingleButtonContent = ({ content, longContent }) => {\r\n  const { useWindowWidth } = useContext(AppContext);\r\n  const windowWidth = useWindowWidth();\r\n\r\n  return (\r\n    <StyledContent>{windowWidth < 768 ? content : longContent}</StyledContent>\r\n  );\r\n};\r\n\r\nexport default SingleButtonContent;\r\n","import React from 'react';\r\nimport { NavLink, useRouteMatch } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport SingleButtonContent from './SingleButtonContent';\r\n\r\nconst Wrapper = styled.menu`\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n\r\n  @media (min-width: 768px) {\r\n    width: 36.5%;\r\n    height: 152px;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    margin: 56px 40px auto auto;\r\n    border-bottom: none;\r\n  }\r\n\r\n  @media (min-width: 1440px) {\r\n    width: 350px;\r\n    max-width: 350px;\r\n    height: 176px;\r\n    position: absolute;\r\n    top: 456px;\r\n    right: 0;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst StyledNavLink = styled(NavLink)`\r\n  font-size: 0.9rem;\r\n  line-height: 50px;\r\n  font-weight: 700;\r\n  text-decoration: none;\r\n  text-transform: uppercase;\r\n  letter-spacing: 0.2rem;\r\n  opacity: 0.5;\r\n  padding: 0 5px;\r\n  color: ${(p) => p.theme.white};\r\n\r\n  &.active {\r\n    opacity: 1;\r\n    border-bottom: 4px solid ${(p) => p.theme[p.color]};\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    height: 40px;\r\n    border: 1px solid rgba(255, 255, 255, 0.4);\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    padding: 7.5px 20px;\r\n\r\n    &.active {\r\n      background-color: ${(p) => p.theme[p.color]};\r\n      border-bottom: none;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 1440px) {\r\n    height: 48px;\r\n    font-size: 1.2rem;\r\n    letter-spacing: 0.25rem;\r\n    transition: 0.3s;\r\n\r\n    &:hover:not(.active) {\r\n      background-color: rgba(216, 216, 216, 0.4);\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledNumber = styled.span`\r\n  display: none;\r\n\r\n  @media (min-width: 768px) {\r\n    display: block;\r\n    margin-right: 17px;\r\n  }\r\n  @media (min-width: 1440px) {\r\n    margin-right: 25px;\r\n  }\r\n`;\r\n\r\nconst PlanetDetailsButtons = () => {\r\n  let { url } = useRouteMatch();\r\n  const getPlanetColor = (planetName) => planetName.slice(1);\r\n\r\n  return (\r\n    <Wrapper>\r\n      <StyledNavLink color={getPlanetColor(url)} to={`${url}/overview`}>\r\n        <StyledNumber>01</StyledNumber>\r\n        <SingleButtonContent content=\"Overview\" longContent=\"Overview\" />\r\n      </StyledNavLink>\r\n      <StyledNavLink color={getPlanetColor(url)} to={`${url}/structure`}>\r\n        <StyledNumber>02</StyledNumber>\r\n        <SingleButtonContent\r\n          content=\"Structure\"\r\n          longContent=\"Internal Structure\"\r\n        />\r\n      </StyledNavLink>\r\n      <StyledNavLink color={getPlanetColor(url)} to={`${url}/surface`}>\r\n        <StyledNumber>03</StyledNumber>\r\n        <SingleButtonContent content=\"Surface\" longContent=\"Surface Geology\" />\r\n      </StyledNavLink>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default PlanetDetailsButtons;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledTitle = styled.h2`\r\n  text-transform: uppercase;\r\n  @media (min-width: 768px) {\r\n    font-size: 4.8rem;\r\n    line-height: 6.2rem;\r\n  }\r\n\r\n  @media (min-width: 1440px) {\r\n    font-size: 8rem;\r\n    line-height: 10.4rem;\r\n  }\r\n`;\r\n\r\nconst Title = ({ planetName }) => <StyledTitle>{planetName}</StyledTitle>;\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledParagraph = styled.p`\r\n  width: 100%;\r\n  max-width: 327px;\r\n  margin-top: 16px;\r\n  text-align: center;\r\n  font-size: 1.1rem;\r\n  line-height: 2.2rem;\r\n  opacity: 0.8;\r\n\r\n  @media (min-width: 768px) {\r\n    margin-top: 24px;\r\n    text-align: left;\r\n  }\r\n\r\n  @media (min-width: 1440px) {\r\n    font-size: 1.4rem;\r\n    line-height: 2.5rem;\r\n  }\r\n`;\r\n\r\nconst Description = ({ content }) => (\r\n  <StyledParagraph>{content}</StyledParagraph>\r\n);\r\n\r\nexport default Description;\r\n","export default __webpack_public_path__ + \"static/media/icon-source.90231c68.svg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport linkIcon from '../../../assets/icon-source.svg';\r\n\r\nconst StyledLinWrapper = styled.div`\r\n  width: 100%;\r\n  height: 25px;\r\n  margin-top: 16px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 1.2rem;\r\n  line-height: 2.5rem;\r\n  opacity: 0.5;\r\n\r\n  @media (min-width: 768px) {\r\n    margin-top: 32px;\r\n    justify-content: flex-start;\r\n  }\r\n  @media (min-width: 1440px) {\r\n    margin-top: 24px;\r\n    font-size: 1.4rem;\r\n  }\r\n`;\r\n\r\nconst StyledLink = styled.a`\r\n  margin-left: 5px;\r\n  font-weight: bold;\r\n  letter-spacing: 0.05rem;\r\n  color: #fff;\r\n`;\r\n\r\nconst StyledArrow = styled.img`\r\n  width: 12px;\r\n  height: 12px;\r\n  margin-left: 4px;\r\n`;\r\n\r\nconst SourceLink = ({ source }) => (\r\n  <StyledLinWrapper>\r\n    <p>Source:</p>\r\n    <StyledLink href={source} target=\"_blank\">\r\n      Wikipedia\r\n    </StyledLink>\r\n    <StyledArrow src={linkIcon} alt=\"\" />\r\n  </StyledLinWrapper>\r\n);\r\n\r\nexport default SourceLink;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\r\nimport Title from './Title';\r\nimport Description from './Description';\r\nimport SourceLink from './SourceLink';\r\n\r\nconst StyledSection = styled.section`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  min-height: 235px;\r\n  width: 80%;\r\n  margin: 15px auto;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 339px;\r\n    min-height: 253px;\r\n    height: 280px;\r\n    margin: -208px auto auto 39px;\r\n    align-items: flex-start;\r\n  }\r\n\r\n  @media (min-width: 1440px) {\r\n    width: 350px;\r\n    height: initial;\r\n    position: absolute;\r\n    top: 70px;\r\n    right: 0;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst PlanetDescription = ({ currentPlanet }) => {\r\n  const { url } = useRouteMatch();\r\n  const { overview, structure, geology, name } = currentPlanet;\r\n\r\n  return (\r\n    <StyledSection>\r\n      <Title planetName={name} />\r\n      <Switch>\r\n        <Route path={`${url}/overview`}>\r\n          <Description content={overview.content} />\r\n          <SourceLink source={overview.source} />\r\n        </Route>\r\n        <Route path={`${url}/structure`}>\r\n          <Description content={structure.content} />\r\n          <SourceLink source={structure.source} />\r\n        </Route>\r\n        <Route path={`${url}/surface`}>\r\n          <Description content={geology.content} />\r\n          <SourceLink source={geology.source} />\r\n        </Route>\r\n      </Switch>\r\n    </StyledSection>\r\n  );\r\n};\r\n\r\nexport default PlanetDescription;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledSingleFact = styled.div`\r\n  width: 100%;\r\n  height: 48px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 11px 24px;\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  text-transform: uppercase;\r\n\r\n  @media (min-width: 768px) {\r\n    height: 100%;\r\n    flex-basis: 164px;\r\n    flex-direction: column;\r\n    padding: 17.5px 16px;\r\n    align-items: flex-start;\r\n  }\r\n\r\n  @media (min-width: 1440px) {\r\n    flex-basis: 255px;\r\n    padding: 20px 23px;\r\n  }\r\n`;\r\n\r\nconst StyledFactName = styled.p`\r\n  font-size: 0.8rem;\r\n  line-height: 1.6rem;\r\n  font-weight: bold;\r\n  letter-spacing: 0.07rem;\r\n  opacity: 0.5;\r\n\r\n  @media (min-width: 1440px) {\r\n    font-size: 1.1rem;\r\n    line-height: 2.5rem;\r\n  }\r\n`;\r\n\r\nconst StyledFactValue = styled.p`\r\n  font-family: 'Antonio';\r\n  font-size: 2rem;\r\n  line-height: 2.6rem;\r\n  letter-spacing: -0.08rem;\r\n\r\n  @media (min-width: 768px) {\r\n    font-size: 2.4rem;\r\n    line-height: 3.1rem;\r\n  }\r\n\r\n  @media (min-width: 1440px) {\r\n    font-size: 4rem;\r\n    line-height: 5.2rem;\r\n  }\r\n`;\r\n\r\nconst SingleFact = ({ factName, value }) => {\r\n  return (\r\n    <StyledSingleFact>\r\n      <StyledFactName>{factName}</StyledFactName>\r\n      <StyledFactValue>{value}</StyledFactValue>\r\n    </StyledSingleFact>\r\n  );\r\n};\r\n\r\nexport default SingleFact;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport SingleFact from './SingleMathFact';\r\n\r\nconst MathFactsWrapper = styled.section`\r\n  width: 80%;\r\n  height: 216px;\r\n  max-width: 360px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  margin: 32px auto;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 90%;\r\n    max-width: 100%;\r\n    height: 88px;\r\n    flex-direction: row;\r\n  }\r\n\r\n  @media (min-width: 1440px) {\r\n    width: 100%;\r\n    height: 128px;\r\n    position: absolute;\r\n    top: 729px;\r\n    left: 0;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst MathFacts = ({ currentPlanet }) => {\r\n  const { rotation, revolution, radius, temperature } = currentPlanet;\r\n\r\n  return (\r\n    <MathFactsWrapper>\r\n      <SingleFact factName={'rotation time'} value={rotation} />\r\n      <SingleFact factName={'revolution time'} value={revolution} />\r\n      <SingleFact factName={'radius'} value={radius} />\r\n      <SingleFact factName={'average temp.'} value={temperature} />\r\n    </MathFactsWrapper>\r\n  );\r\n};\r\n\r\nexport default MathFacts;\r\n","export default __webpack_public_path__ + \"static/media/planet-mercury.1fce205c.svg\";","export default __webpack_public_path__ + \"static/media/planet-venus.db5a3444.svg\";","export default __webpack_public_path__ + \"static/media/planet-earth.4d12af96.svg\";","export default __webpack_public_path__ + \"static/media/planet-mars.f9dc1ca4.svg\";","export default __webpack_public_path__ + \"static/media/planet-jupiter.b1d0956b.svg\";","export default __webpack_public_path__ + \"static/media/planet-saturn.801f886a.svg\";","export default __webpack_public_path__ + \"static/media/planet-uranus.e91b297f.svg\";","export default __webpack_public_path__ + \"static/media/planet-neptune.af322961.svg\";","export default __webpack_public_path__ + \"static/media/planet-mercury-internal.d1be1432.svg\";","export default __webpack_public_path__ + \"static/media/planet-venus-internal.1a94aa02.svg\";","export default __webpack_public_path__ + \"static/media/planet-earth-internal.3c465186.svg\";","export default __webpack_public_path__ + \"static/media/planet-mars-internal.d867ac80.svg\";","export default __webpack_public_path__ + \"static/media/planet-jupiter-internal.3087313d.svg\";","export default __webpack_public_path__ + \"static/media/planet-saturn-internal.e883c559.svg\";","export default __webpack_public_path__ + \"static/media/planet-uranus-internal.578233c6.svg\";","export default __webpack_public_path__ + \"static/media/planet-neptune-internal.3ebd623e.svg\";","export default __webpack_public_path__ + \"static/media/geology-mercury.aa6732c3.png\";","export default __webpack_public_path__ + \"static/media/geology-venus.484f9dac.png\";","export default __webpack_public_path__ + \"static/media/geology-earth.61d2b324.png\";","export default __webpack_public_path__ + \"static/media/geology-mars.d3ffce8e.png\";","export default __webpack_public_path__ + \"static/media/geology-jupiter.93e4e021.png\";","export default __webpack_public_path__ + \"static/media/geology-saturn.b309827a.png\";","export default __webpack_public_path__ + \"static/media/geology-uranus.8cec343d.png\";","export default __webpack_public_path__ + \"static/media/geology-neptune.d1247e41.png\";","import React, { useContext } from 'react';\r\nimport styled from 'styled-components';\r\nimport { Switch, Route } from 'react-router';\r\nimport { useRouteMatch } from 'react-router';\r\nimport { AppContext } from '../../../providers/AppProvider';\r\n\r\n// planets imgs:\r\nimport Mercury from '../../../assets/planet-mercury.svg';\r\nimport Venus from '../../../assets/planet-venus.svg';\r\nimport Earth from '../../../assets/planet-earth.svg';\r\nimport Mars from '../../../assets/planet-mars.svg';\r\nimport Jupiter from '../../../assets/planet-jupiter.svg';\r\nimport Saturn from '../../../assets/planet-saturn.svg';\r\nimport Uranus from '../../../assets/planet-uranus.svg';\r\nimport Neptune from '../../../assets/planet-neptune.svg';\r\n// internals structure imgs:\r\nimport MercuryInternal from '../../../assets/planet-mercury-internal.svg';\r\nimport VenusInternal from '../../../assets/planet-venus-internal.svg';\r\nimport EarthInternal from '../../../assets/planet-earth-internal.svg';\r\nimport MarsInternal from '../../../assets/planet-mars-internal.svg';\r\nimport JupiterInternal from '../../../assets/planet-jupiter-internal.svg';\r\nimport SaturnInternal from '../../../assets/planet-saturn-internal.svg';\r\nimport UranusInternal from '../../../assets/planet-uranus-internal.svg';\r\nimport NeptuneInternal from '../../../assets/planet-neptune-internal.svg';\r\n// planets geology:\r\nimport MercuryGeology from '../../../assets/geology-mercury.png';\r\nimport VenusGeology from '../../../assets/geology-venus.png';\r\nimport EarthGeology from '../../../assets/geology-earth.png';\r\nimport MarsGeology from '../../../assets/geology-mars.png';\r\nimport JupiterGeology from '../../../assets/geology-jupiter.png';\r\nimport SaturnGeology from '../../../assets/geology-saturn.png';\r\nimport UranusGeology from '../../../assets/geology-uranus.png';\r\nimport NeptuneGeology from '../../../assets/geology-neptune.png';\r\n\r\nconst PlanetImageWrapper = styled.section`\r\n  width: 100%;\r\n  min-height: 304px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  @media (min-width: 768px) {\r\n    order: -1;\r\n    min-height: 460px;\r\n  }\r\n\r\n  @media (min-width: 1440px) {\r\n    width: calc(100% - 350px);\r\n    position: absolute;\r\n    top: 70px;\r\n    left: 0;\r\n    margin: 0;\r\n    padding: 0;\r\n    order: unset;\r\n  }\r\n`;\r\n\r\nconst StyledPlanetImage = styled.img`\r\n  width: ${(p) => `${p.imageWidth}px`};\r\n  display: block;\r\n  position: relative;\r\n`;\r\n\r\nconst StyledPlanetGeology = styled.img`\r\n  display: block;\r\n  width: ${(p) => `${p.imageWidth}px`};\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n`;\r\n\r\n// Returns property img size depends on screen width dynamically:\r\nconst handleImgSize = (url, windowWidth) => {\r\n  let output;\r\n  if (url === '/mercury') {\r\n    if (windowWidth < 768) {\r\n      output = 111;\r\n    } else if (windowWidth < 1440) {\r\n      output = 184;\r\n    } else output = 290;\r\n  } else if (url === '/venus') {\r\n    if (windowWidth < 768) {\r\n      output = 154;\r\n    } else if (windowWidth < 1440) {\r\n      output = 253;\r\n    } else output = 400;\r\n  } else if (url === '/earth') {\r\n    if (windowWidth < 768) {\r\n      output = 173;\r\n    } else if (windowWidth < 1440) {\r\n      output = 285;\r\n    } else output = 450;\r\n  } else if (url === '/mars') {\r\n    if (windowWidth < 768) {\r\n      output = 129;\r\n    } else if (windowWidth < 1440) {\r\n      output = 213;\r\n    } else output = 336;\r\n  } else if (url === '/jupiter') {\r\n    if (windowWidth < 768) {\r\n      output = 224;\r\n    } else if (windowWidth < 1440) {\r\n      output = 369;\r\n    } else output = 582;\r\n  } else if (url === '/saturn') {\r\n    if (windowWidth < 768) {\r\n      output = 256;\r\n    } else if (windowWidth < 1440) {\r\n      output = 422;\r\n    } else output = 666;\r\n  } else if (url === '/uranus') {\r\n    if (windowWidth < 768) {\r\n      output = 176;\r\n    } else if (windowWidth < 1440) {\r\n      output = 290;\r\n    } else output = 458;\r\n  } else if (url === '/neptune') {\r\n    if (windowWidth < 768) {\r\n      output = 173;\r\n    } else if (windowWidth < 1440) {\r\n      output = 285;\r\n    } else output = 450;\r\n  } else {\r\n    // geology img  width\r\n    if (windowWidth < 768) {\r\n      output = 80;\r\n    } else if (windowWidth < 1440) {\r\n      output = 120;\r\n    } else output = 160;\r\n  }\r\n\r\n  return output;\r\n};\r\n\r\n// Imported planets to use:\r\nconst importedPlanets = {\r\n  planet: [Mercury, Venus, Earth, Mars, Jupiter, Saturn, Uranus, Neptune],\r\n  internal: [\r\n    MercuryInternal,\r\n    VenusInternal,\r\n    EarthInternal,\r\n    MarsInternal,\r\n    JupiterInternal,\r\n    SaturnInternal,\r\n    UranusInternal,\r\n    NeptuneInternal,\r\n  ],\r\n  geology: [\r\n    MercuryGeology,\r\n    VenusGeology,\r\n    EarthGeology,\r\n    MarsGeology,\r\n    JupiterGeology,\r\n    SaturnGeology,\r\n    UranusGeology,\r\n    NeptuneGeology,\r\n  ],\r\n};\r\n\r\nconst PlanetImage = () => {\r\n  const { useWindowWidth, planetsData } = useContext(AppContext);\r\n  const windowWidth = useWindowWidth();\r\n  const { url } = useRouteMatch();\r\n\r\n  // Returns property img depends on url and path\r\n  const getPlanetImg = (url, path) => {\r\n    let planetName = url.replace('/', '');\r\n    planetName = planetName.charAt(0).toUpperCase() + planetName.slice(1);\r\n\r\n    for (let i = 0; i < planetsData.length; i++) {\r\n      if (path === `${url}/overview`) {\r\n        if (planetName === planetsData[i].name)\r\n          return importedPlanets.planet[i];\r\n      } else if (path === `${url}/structure`) {\r\n        if (planetName === planetsData[i].name)\r\n          return importedPlanets.internal[i];\r\n      } else if (path === `${url}/surface`) {\r\n        if (planetName === planetsData[i].name)\r\n          return importedPlanets.planet[i];\r\n      } else {\r\n        if (planetName === planetsData[i].name)\r\n          return importedPlanets.geology[i];\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PlanetImageWrapper>\r\n      <Switch>\r\n        <Route path={`${url}/overview`}>\r\n          <StyledPlanetImage\r\n            src={getPlanetImg(url, `${url}/overview`)}\r\n            imageWidth={handleImgSize(url, windowWidth)}\r\n            alt=\"Image of a planet.\"\r\n          />\r\n        </Route>\r\n\r\n        <Route path={`${url}/structure`}>\r\n          <StyledPlanetImage\r\n            src={getPlanetImg(url, `${url}/structure`)}\r\n            imageWidth={handleImgSize(url, windowWidth)}\r\n            alt=\"Image of structure of a planet.\"\r\n          />\r\n        </Route>\r\n\r\n        <Route path={`${url}/surface`}>\r\n          <StyledPlanetImage\r\n            src={getPlanetImg(url, `${url}/surface`)}\r\n            imageWidth={handleImgSize(url, windowWidth)}\r\n            alt=\"Image of structure of a planet.\"\r\n          />\r\n          <StyledPlanetGeology\r\n            src={getPlanetImg(url, 'geology')}\r\n            alt=\"geology of a planet\"\r\n            imageWidth={handleImgSize(undefined, windowWidth)}\r\n          />\r\n        </Route>\r\n      </Switch>\r\n    </PlanetImageWrapper>\r\n  );\r\n};\r\n\r\nexport default PlanetImage;\r\n","import React, { useContext, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useRouteMatch } from 'react-router-dom';\r\nimport { AppContext } from '../../providers/AppProvider';\r\nimport PlanetDetailsButtons from './featureButtons/PlanetButtons';\r\nimport PlanetDescription from './planetDescription/PlanetDescription';\r\nimport MathFacts from './planetMathFacts/MathFacts';\r\nimport PlanetImage from './planetImage/planetImage';\r\n\r\nconst MainPanelWrapper = styled.main`\r\n  min-height: 100%;\r\n  margin: 0 auto;\r\n  padding-bottom: 15px;\r\n  transition: 0.4s;\r\n  transform: ${(p) => (p.menuOpened ? `scale(0)` : 'scale(1)')};\r\n\r\n  @media (min-width: 768px) {\r\n    transform: scale(1);\r\n    display: flex;\r\n    flex-direction: column;\r\n    max-width: 900px;\r\n    padding: 30px;\r\n  }\r\n\r\n  @media (min-width: 1440px) {\r\n    max-width: 1110px;\r\n    min-height: calc(100vh - 85px);\r\n    display: block;\r\n    padding-bottom: 45px;\r\n    position: relative;\r\n  }\r\n`;\r\n\r\nconst MainPlanetPanel = () => {\r\n  const { planetsData, currentPlanet, setCurrentPlanet, isMenuOpened } =\r\n    useContext(AppContext);\r\n\r\n  const { url } = useRouteMatch();\r\n  let planetName = url.replace('/', '');\r\n  planetName = planetName.charAt(0).toUpperCase() + planetName.slice(1);\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < planetsData.length; i++) {\r\n      if (planetsData[i].name === planetName) {\r\n        setCurrentPlanet(planetsData[i]);\r\n      }\r\n    }\r\n  }, [planetName]);\r\n\r\n  return (\r\n    <MainPanelWrapper menuOpened={isMenuOpened}>\r\n      <PlanetDetailsButtons />\r\n      <PlanetImage currentPlanet={currentPlanet} />\r\n      <PlanetDescription currentPlanet={currentPlanet} />\r\n      <MathFacts currentPlanet={currentPlanet} />\r\n    </MainPanelWrapper>\r\n  );\r\n};\r\n\r\nexport default MainPlanetPanel;\r\n","export default __webpack_public_path__ + \"static/media/lastRocket.eef5ae76.svg\";","import React, { useState, useContext } from 'react';\r\nimport Typewriter from 'typewriter-effect';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport rocket from '../../assets/lastRocket.svg';\r\nimport { AppContext } from '../../providers/AppProvider';\r\n\r\nconst EntranceComponentWrapper = styled.main`\r\n  height: calc(100vh - 69px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: 20px 15px;\r\n  position: relative;\r\n  transition: transform 0.4s;\r\n  transform: ${(p) => (p.isOpened ? 'scale(0)' : '')};\r\n  overflow: hidden;\r\n\r\n  @media (min-width: 768px) {\r\n    height: calc(100vh - 158px);\r\n    padding: 60px 100px;\r\n  }\r\n`;\r\n\r\nconst StyledTitle = styled.h2`\r\n  font-family: 'Space Mono';\r\n  margin-bottom: 10px;\r\n  text-align: center;\r\n  & .Typewriter {\r\n    color: ${({ theme }) => theme.white};\r\n    &__wrapper,\r\n    &__cursor {\r\n      font-size: 2.2rem;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    min-height: 140px;\r\n    margin-bottom: 50px;\r\n    & .Typewriter__wrapper,\r\n    & .Typewriter__cursor {\r\n      font-size: 4.2rem;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 1440px) {\r\n    width: 42%;\r\n    & .Typewriter__wrapper,\r\n    & .Typewriter__cursor {\r\n      font-size: 4.8rem;\r\n    }\r\n  }\r\n`;\r\n\r\nconst AppDescription = styled.p`\r\n  width: 70%;\r\n  font-size: ${({ primary }) => (primary ? '1.8rem' : '1.4rem')};\r\n  margin-bottom: ${({ primary }) => (primary ? '15px' : '')};\r\n  transform: scale(0);\r\n  transition: transform 0.7s;\r\n  transform: ${({ active }) => (active ? 'scale(1)' : 'scale(0)')};\r\n  text-align: center;\r\n  .curious {\r\n    font-size: 1.4rem;\r\n    font-weight: bold;\r\n  }\r\n\r\n  .space-word {\r\n    font-size: 1.8rem;\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    line-height: 3rem;\r\n    font-size: ${({ primary }) => (primary ? '2.6rem' : '2.2rem')};\r\n    margin-bottom: ${({ primary }) => (primary ? '45px' : '')};\r\n    .curious {\r\n      font-size: 2.2rem;\r\n    }\r\n    .space-word {\r\n      font-size: 2.2rem;\r\n    }\r\n  }\r\n\r\n  @media (min-width: 1440px) {\r\n    width: 50%;\r\n    line-height: 4rem;\r\n  }\r\n`;\r\n\r\nconst flyAround = keyframes`\r\n from{\r\n  transform: rotate(360deg) translateX(90px);\r\n }\r\n to{\r\n  transform: rotate(0) translateX(90px);\r\n }\r\n`;\r\n\r\nconst RocketImage = styled.img`\r\n  display: block;\r\n  width: 80px;\r\n  animation: ${flyAround} 6s linear infinite;\r\n  position: absolute;\r\n  top: 63%;\r\n\r\n  @media (min-width: 768px) {\r\n    width: 120px;\r\n    top: 67%;\r\n  }\r\n  @media (min-width: 1440px) {\r\n    top: 70%;\r\n  }\r\n`;\r\n\r\nconst MainPanelStarter = () => {\r\n  const [active, setActive] = useState(false);\r\n  const { isMenuOpened, toggleMenuOpen, useWindowWidth } =\r\n    useContext(AppContext);\r\n\r\n  const entranceMessage =\r\n    useWindowWidth() >= 768\r\n      ? 'Choose a planet you want to explore!'\r\n      : 'Click Rocket to start!';\r\n\r\n  return (\r\n    <EntranceComponentWrapper isOpened={isMenuOpened}>\r\n      <StyledTitle>\r\n        <Typewriter\r\n          onInit={(writer) => {\r\n            writer\r\n              .typeString('Welcome to the Space!')\r\n              .callFunction(() => setActive(true))\r\n              .pauseFor(1500)\r\n              .deleteAll()\r\n              .typeString(entranceMessage)\r\n              .start();\r\n          }}\r\n        />\r\n      </StyledTitle>\r\n\r\n      <AppDescription primary active={active}>\r\n        Hey! <br /> It seems you're in\r\n        <span className=\"space-word\"> space!</span>\r\n      </AppDescription>\r\n\r\n      <AppDescription active={active}>\r\n        And if you're as <span className=\"curious\">curious</span> as me, it\r\n        would be awesome to take a look at our solar system planets with their\r\n        breathtaking features !\r\n      </AppDescription>\r\n\r\n      <RocketImage\r\n        onClick={useWindowWidth() >= 768 ? null : toggleMenuOpen}\r\n        src={rocket}\r\n        alt=\"Picture of a spaceship rocket.\"\r\n      />\r\n    </EntranceComponentWrapper>\r\n  );\r\n};\r\n\r\nexport default MainPanelStarter;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport Header from './header/Header';\r\nimport MainPlanetPanel from './mainPanel/mainPlanetPanel';\r\nimport MainPanelStarter from './mainPanel/MainPanelStarter';\r\n\r\nconst AppWrapper = styled.div`\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst App = () => {\r\n  return (\r\n    <AppWrapper>\r\n      <Router basename={process.env.PUBLIC_URL}>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={MainPanelStarter} />\r\n          <Route path=\"/earth\" component={MainPlanetPanel} />\r\n          <Route path=\"/mercury\" component={MainPlanetPanel} />\r\n          <Route path=\"/venus\" component={MainPlanetPanel} />\r\n          <Route path=\"/mars\" component={MainPlanetPanel} />\r\n          <Route path=\"/jupiter\" component={MainPlanetPanel} />\r\n          <Route path=\"/saturn\" component={MainPlanetPanel} />\r\n          <Route path=\"/uranus\" component={MainPlanetPanel} />\r\n          <Route path=\"/neptune\" component={MainPlanetPanel} />\r\n        </Switch>\r\n      </Router>\r\n    </AppWrapper>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport AppProvider from './providers/AppProvider';\r\n\r\nReactDOM.render(\r\n  <AppProvider>\r\n    <App />\r\n  </AppProvider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}